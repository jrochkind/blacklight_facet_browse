<%# like Blacklight _facet_limit.html.erb , displays an individual
    sidebar facet list.

    locals required:
      * solr_field: name of facet field configured in BL configuration (passed in by standard BL)
      * One of EITHER:
        * display_facet: passed in by standard BL, a RSolr::Ext::Response::Facets::FacetField -- or equivalent in more recent BL. 
        * paginator: Blacklight::FacetPaginator, passed in by our BlacklightFacetBrowse
          action, when retrieving AJAX results for sidebar.

    But we add a search
    box, with ajax instant search -- we're actually
    going to call out to the existing facet_limit, woot!

    If you want searchable box in sidebar facet, you configure
    use of this partial in your facet configuration (such as in catalogcontroller),
    eg

        config.add_facet_field  "subject_topic_facet", :label => "Topic",
          :limit => true, :browse_field => "subject_topic_browse_facet",
          :partial => "browsable_facet_limit"

    Have to wrap the whole thing in a div to not confuse
    expand/contract twiddle %>
<%-
unless local_assigns[:paginator]
  paginator =
    Blacklight::Solr::FacetPaginator.new(display_facet.items,
      :limit => facet_limit_for(solr_field))
end
-%>

<div class="facet_list facet_sidebar_list">

  <%# don't show search form if all values fit on current page already %>
  <% if paginator.has_next? %>
    <%= render "facet_browse_search_form", :browse_config =>  BlacklightFacetBrowse::ConfigInfo.new(blacklight_config, solr_field), :ajax_url => catalog_facet_limit_content_path(solr_field) %>
  <% end %>

  <%# div with data-instant-search="content" has to be there, for AJAX instant
    search to pull out the right part to update on pate %>
  <div data-instant-search="content" class="facet-browse-instant-search-content">
    <%# based on stock BL "_facet_limit" partial, but we had to modify it
        to do what we need. %>
    <%# render "facet_limit", local_assigns.except(:browsable_facet_limit) %>


    <ul>
      <% paginator.items.each do |item| -%>
        <li>
          <%= render "browsable_facet_value", :item => item, :facet_field => solr_field %>
        </li>
      <% end %>

      <% if(paginator.has_next?)  %>
        <li class="more_facets_link"><%= link_to(t('blacklight.search.facets.more'), params.merge(:id => solr_field, :action=>"facet"), :class => "more_facets_link") %></li>
      <% end %>
    </ul>

  </div>
</div>